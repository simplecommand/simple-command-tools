package $classStructure.packageString;

#if ($classStructure.hibernate == "true") 
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
#end
#foreach ($import in $classStructure.importsList)
import $import;
#end

/**
  * $classStructure.classComment
  *
  * @author $classStructure.author
  * @version $classStructure.version
  */
#if ($classStructure.hibernate == "true")
@Entity
#end        
public class $classStructure.identifier#if($classStructure.extendsString) extends $classStructure.extendsString#end#if($classStructure.implementsString) implements $classStructure.implementsString#end {

#foreach ($instanceVariable in $classStructure.instanceVariableList)
#if ($instanceVariable.cardinality == "none")
#if (($instanceVariable.identifier == "id") && ($classStructure.hibernate == "true"))

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
#end
    $instanceVariable.modifier $instanceVariable.type $instanceVariable.identifier;
#end
#if ($instanceVariable.cardinality == "one-many")  
    $instanceVariable.modifier List<$instanceVariable.type> ${instanceVariable.identifier}List = new ArrayList<$instanceVariable.type>();
#end
#end
     
#foreach ($instanceVariable in $classStructure.instanceVariableList)
#if ($instanceVariable.cardinality == "none")
    public $instanceVariable.type get${display.capitalize($instanceVariable.identifier)}() {
        return this.$instanceVariable.identifier;
    }
    
    public void set${display.capitalize($instanceVariable.identifier)}(final $instanceVariable.type $instanceVariable.identifier) {
        this.$instanceVariable.identifier = $instanceVariable.identifier;
    }
    
#end
#if ($instanceVariable.cardinality == "one-many")
    public List<$instanceVariable.type> get${display.capitalize($instanceVariable.identifier)}List() {
        return new ArrayList<$instanceVariable.type>(this.${instanceVariable.identifier}List);
    }
    
    public void add${display.capitalize($instanceVariable.identifier)}(final $instanceVariable.type $instanceVariable.identifier) {
        this.${instanceVariable.identifier}List.add(${instanceVariable.identifier});
    }
    
#end
#end
}
